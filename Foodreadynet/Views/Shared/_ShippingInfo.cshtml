@model FoodReady.WebUI.Models.CheckoutModel
@using FR.Infrastructure.Helpers
@using FoodReady.WebUI.HtmlHelpers

<p class="midTitle">
    Address Info @if (Model.Cart.IsDelivery)
    {<span>(Deliver to)</span>}
</p>
<div id="shippingInfo">
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.FirstName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.LastName)
    </div>
    <div id="roomnumer">
        <h5 style="cursor:pointer;"><b>Room number?</b> Clich here if available.</h5>
    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.RoomNumber)
            @Html.TextBoxFor(m => m.RoomNumber, new { @class = "form-control boxShadow" })
        </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AddressLine)
        @Html.TextBoxFor(m => m.AddressLine, new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.AddressLine)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.City)
        @Html.TextBoxFor(m => m.City, new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.City)
    </div>

    <div class="=form-group">
        @Html.LabelFor(m => m.State)
        @Html.DropDownListFor(x => x.State, Helper.StateDropdownData(Model.State), "Choose a State", new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.State)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ZipCode)
        @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control boxShadow" })
        @Html.ValidationMessageFor(m => m.ZipCode)
    </div>
</div><hr />
