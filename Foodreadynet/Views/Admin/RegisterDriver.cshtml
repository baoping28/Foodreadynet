@model FoodReady.WebUI.Models.DriverModel
@using FR.Infrastructure.Helpers

@{
    ViewBag.Title = "Register Driver";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="titlebox boxShadow">
    <center>
        <h1>Create a driver account <small style="font-size:12px;color:white;">this register form is only for creating a driver account.</small></h1>
    </center>
</div>
<div class="container boxShadow boxpadding">
    <div class="row">
        @using (Html.BeginForm())
        {
            <p>@TempData["driverMsg"]</p>

            <div class="col-sm-6 col-md-6" style="border-right:solid 1px #cccccc;">
                <h5 style="color:#008cba;"><b>Info Form</b></h5>

                <div class="=form-group">
                    @Html.LabelFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.AddressLine)
                    @Html.TextBoxFor(m => m.AddressLine, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.AddressLine)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.City)
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.City)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.State)
                    @Html.DropDownListFor(x => x.State, Helper.StateDropdownData(null), "Choose a State", new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.State)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.ZipCode)
                    @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.ZipCode)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.WorkCity)
                    @Html.TextBoxFor(m => m.WorkCity, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.WorkCity)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.Phone)
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.Phone)
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control boxShadow" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div><br />
            </div>
            <div class="col-sm-6 col-md-6">
                <h5 style="color:#008cba;"><b>Login Form</b></h5>

                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-user"></span>
                        </span>
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control boxShadow" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div><br />
                <div class="form-group">
                    @Html.LabelFor(m => m.Password)
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-lock"></span>
                        </span>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control boxShadow" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div><br />
                <div class="=form-group">
                    @Html.LabelFor(m => m.ConfirmPassword)
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-lock"></span>
                        </span>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control boxShadow" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div><br />
                <div class="=form-group pull-right">
                    <br /><br /><button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-pencil"></span> &nbsp; Create the driver</button>
                </div><br />
            </div>
        }
    </div>
</div>

