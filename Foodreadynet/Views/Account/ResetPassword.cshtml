@model IdentitySample.Models.ResetPasswordViewModel
<div class="container-full titlepadding">
    <div class="container">
        <div class="row">
            <h1 style="color:#ffffff;">Reset your password</h1>
        </div>
    </div>

</div>

<div class="container toppadding">
    <div class="row toppadding">
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Code)
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-envelope"></span>
                    </span>
                    @Html.PasswordFor(m => m.Email, new { @class = "form-control boxShadow" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control boxShadow" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword)
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-lock"></span>
                    </span>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control boxShadow" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Reset" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
