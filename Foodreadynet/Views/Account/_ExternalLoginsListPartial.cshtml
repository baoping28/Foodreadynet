@model IdentitySample.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>There are no external authentication services.</p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }, FormMethod.Post,null))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        switch (@p.AuthenticationType.ToLower())
                        {
                            case "google":

                                <button type="submit" class="btn btn-default btn-lg boxSmallShadow" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="fa fa-google-plus fa-fw"></i> <span class="network-name" style="text-transform:uppercase;">@p.AuthenticationType</span></button>
                                break;
                            case "facebook":

                            <button type="submit" class="btn btn-default btn-lg boxSmallShadow" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="fa fa-facebook fa-fw"></i> <span class="network-name" style="text-transform:uppercase;">@p.AuthenticationType</span></button>
                                break;
                            case "twitter":

                            <button type="submit" class="btn btn-default btn-lg boxSmallShadow" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="fa fa-twitter fa-fw"></i> <span class="network-name" style="text-transform:uppercase;">@p.AuthenticationType</span></button>
                                break;
                        }
                    }
                </p>
            </div>
        }
    }
}
